1.-Xms 堆最小值  -Xmx 最大值 这两个参数设置一样可以避免堆自动扩展
  -XX:+HeapDumpOnOutOfMemoryError 可以让虚拟机在出现OOM时Dump出当前的内存堆转储快照
  如：-Xmx2m -Xms2m
2.-Xmn 新生代大小,如： -Xmn10M

3.对于HotSpot来说，虽然-Xoss参数(设置本地方法栈大小)存在，但实际上是无效的，栈容量只由-Xss参数设定。如：-Xss128k

4.GC相关：
	UseSerialGC    虚拟机运行在client模式下的默认值，打开后使用Serial+Serial Old收集器组合
	UseParNewGC    打开后使用ParNew+Serial Old收集器组合
	UseConcMarkSweepGC  打开后使用ParNew + CMS +Serial Old收集器组合
	UseParallelGC   虚拟机运行在server模式下的默认值，打开后使用Parallel Scavenge + Serial Old收集器组合
	UseParallelOldGC	打开后使用Parallel Scavenge + Parallel Old收集器组合
	SurvivorRatio	新生代中Eden区域与Survivor区域的容量比值，默认为8，代表:Eden:Survivor=8:1
	PretenureSizeThreshold	  直接晋升到老年代的对象大小，设置这个参数后，大于这个参数的对象直接在老年代分配。
							[threshold 美[?θre?ho?ld] 门槛，入口，开始; [物理学] 临界值]
	MaxTenuringThreshold	晋升到老年代的对象年龄，每个对象在坚持过一次Minor GC后，年龄加1，当超过这个参数值时就进入老年代
	UseAdaptiveSizePolicy	动态调整java堆中各个区域的大小以及进入老年代的年龄
	HandlePromotionFailure	是否允许分配担保失败，即老年代的剩余空间不足以应付新生代的整个Eden和Survivor区所有对象都存活的极端情况
	ParallelGCThreads	设置并行GC进行内存回收的线程数
	GCTimeRatio		GC时间占总时间的比率，默认值为99，即允许1%的GC时间。仅在使用Parallel Scavenge收集器时生效
	MaxGCPauseMillis	设置GC的最大停顿时间。仅在使用Parallel Scavenge收集器时生效
	CMSInitiatingOccupancyFraction	设置CMS收集器在老年代空间被使用多少后触发垃圾收集。默认值为68%。仅在使用CMS收集器时生效
	UseCMSCompactAtFullCollection	设置CMS收集器在完成垃圾收集后是否要进行一次内存碎片整理，仅在使用CMS收集器时生效
	CMSFullGCsBeforeCompaction		设置CMS收集器在进行若干次垃圾收集后再启动一次内存碎片整理，仅在使用CMS收集器时生效
	使用：
		如 ： 
		-XX:+UseSerialGC
		-XX:PretenureSizeThreshold=3145728
5.-XX:+PrintGCDetails 收集器日志参数，发生垃圾收集是打印内存回收日志，并在进程退出的时候输出当前的内存各区域分配情况。
  -XX:PrintTenuringDistribution 打印分代描述
6.-XX:+PrintAssembly 输出反汇编
